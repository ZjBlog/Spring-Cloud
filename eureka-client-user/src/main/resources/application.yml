---
server:
  port: 8088
spring:
  profiles: user1
  application:
    name: user-service
eureka:
  # 实例的id  默认是myhost:myappname:port  可以配置更改
  #  instance:
  #    instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
  client:
    # 开启健康检测
    healthcheck: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  #更改Eureka更新频率将打破服务器的自我保护功能，生产环境下不建议自定义这些配置。
  instance:
    #续约到期时间（默认90秒）
    lease-expiration-duration-in-seconds: 30
    #续约更新时间间隔（默认30秒）
    lease-renewal-interval-in-seconds: 10
#开启hystrix的支持
# 配置对请求的内容的压缩,有了上面spring boot的压缩，此处feign的压缩可以不用
feign:
  hystrix:
    enabled: true
  compression:
    request:
      enabled: true
      mime-types: ["text/xml", "application/xml", "application/json"]
      min-request-size: 512
    response:
      enabled: true
  client:
    config:
      # key 为default时表示的是全局配置
      default:
        loggerLevel: basic
      # 为具体的服务提供者的spring.application.name的值，表示单独为这个工程配置
      db-service:
        loggerLevel: full
#配置 db-service的负载策略
db-service:
  ribbon:
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.WeightedResponseTimeRule
#配置全局的超时时间
ribbon:
  ReadTimeout: 6000
  ConnectTimeout: 6000
#hystrix超时设置  default默认超时设置默认 1000  test1指定方法超时时间
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD# 修改默认的隔离策略为信号量隔离，默认是线程池隔离
          thread:
            timeoutInMilliseconds: 1000 # 命令执行超时时间，单位为毫秒，命令执行超时将会执行fallback，默认是1000
            interruptOnTimeout: true # 超时是否中断HystrixCommand.run方法的执行，默认值是 true
          timeout: true
      fallback:
        isolation:
          semaphore:
            maxConcurrentRequests: 50 # 如果并发数达到该设置值，请求会被拒绝和抛出异常并且fallback不会被调用。（线程池隔离和信号量隔离都适用）默认值是：10
    HystrixService#test1():  # 为某个方法单独配置隔离策略 格式： 类名#方法名(参数类型...)
      execution:
        isolation:
          strategy: SEMAPHORE # 修改默认的隔离策略为线程池隔离，默认是线程池隔离
          semaphore:
            maxConcurrentRequests: 10  # 信号量最大的大小，当最大并发数达到该设置值时，后续的请求将会被拒绝，默认值是：10
  threadpool:
    default:
      coreSize: 10 # 设置并发最大的核心线程数，默认值是：10
    product-provider:
      coreSize: 6 # 为product-provider这个线程组设置最大核心线程为6

    #hystrix.threadpool.default.maxQueueSize
    # 当maxQueueSize=-1时，会使用SynchronousQueue,maxQueueSize>0时使用 LinkedBlcokingQueue，并且该值只在初始化的时候才生效，默认值是：-1
    #hystrix.threadpool.default.queueSizeRejectionThreshold
    # 因为maxQueueSize的值在设置后不可进行修改，如果要还没有达到maxQueueSize值，请求也被拒绝，那么修改这个值即可，当maxQueueSize==-1时不生效。queueSizeRejectionThreshold默认值是：5
    # 更多参数：https://github.com/Netflix/Hystrix/wiki/Configuration#ThreadPool
    test1:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 7000
---
server:
  port: 8089
spring:
  profiles: user2
  application:
    name: user-service
eureka:
  client:
    healthcheck: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  #更改Eureka更新频率将打破服务器的自我保护功能，生产环境下不建议自定义这些配置。
  instance:
    #续约到期时间（默认90秒）
    lease-expiration-duration-in-seconds: 30
    #续约更新时间间隔（默认30秒）
    lease-renewal-interval-in-seconds: 10